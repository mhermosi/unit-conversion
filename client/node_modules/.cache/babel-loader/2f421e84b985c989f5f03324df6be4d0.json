{"ast":null,"code":"var _jsxFileName = \"/Users/mhermosi/Development/clcklabs/unit-conversion/client/src/components/unit-conversion-form.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function UnitConversionForm() {\n  const [inputNumericalValue, setInputNumericalValue] = useState(\"\");\n  const [inputUnitOfMeasure, setInputUnitOfMeasure] = useState(\"\");\n  const [studentResponse, setStudentResponse] = useState(\"\");\n  const [targetUnitOfMeasure, setTargetUnitOfMeasure] = useState(\"\");\n  const [resultOutput, setResultOutput] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch('/api/verify-conversion', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        inputNumericalValue: inputNumericalValue,\n        inputUnitOfMeasure: inputUnitOfMeasure,\n        studentResponse: studentResponse,\n        targetUnitOfMeasure: targetUnitOfMeasure\n      })\n    });\n    const body = await response.json();\n    setResultOutput(body.output);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputNumericalValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Input Numerical Value\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"inputNumericalValue\",\n    id: \"inputNumericalValue\",\n    value: inputNumericalValue,\n    onChange: e => setInputNumericalValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputUnitOfMeasure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Input Unit of Measure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"inputUnitOfMeasure\",\n    id: \"inputUnitOfMeasure\",\n    value: inputUnitOfMeasure,\n    onChange: e => setInputUnitOfMeasure(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"studentResponse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Student Response\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"studentResponse\",\n    id: \"studentResponse\",\n    value: studentResponse,\n    onChange: e => setStudentResponse(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"targetUnitOfMeasure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Target Unit of Measure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"targetUnitOfMeasure\",\n    id: \"targetUnitOfMeasure\",\n    value: targetUnitOfMeasure,\n    onChange: e => setTargetUnitOfMeasure(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, resultOutput), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mhermosi/Development/clcklabs/unit-conversion/client/src/components/unit-conversion-form.js"],"names":["React","useState","useEffect","UnitConversionForm","inputNumericalValue","setInputNumericalValue","inputUnitOfMeasure","setInputUnitOfMeasure","studentResponse","setStudentResponse","targetUnitOfMeasure","setTargetUnitOfMeasure","resultOutput","setResultOutput","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","output","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function UnitConversionForm() {\n\n    const [inputNumericalValue, setInputNumericalValue] = useState(\"\");\n    const [inputUnitOfMeasure,  setInputUnitOfMeasure]  = useState(\"\");\n    const [studentResponse,     setStudentResponse]     = useState(\"\");\n    const [targetUnitOfMeasure, setTargetUnitOfMeasure] = useState(\"\");\n    const [resultOutput,        setResultOutput]        = useState(\"\");\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const response = await fetch('/api/verify-conversion', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({\n                inputNumericalValue: inputNumericalValue,\n                inputUnitOfMeasure: inputUnitOfMeasure,\n                studentResponse: studentResponse,\n                targetUnitOfMeasure: targetUnitOfMeasure\n            })\n        });\n\n        const body = await response.json();\n        setResultOutput(body.output);\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"inputNumericalValue\">Input Numerical Value</label>\n                <input type=\"text\" name=\"inputNumericalValue\" id=\"inputNumericalValue\" value={inputNumericalValue} onChange={e => setInputNumericalValue(e.target.value)} />\n            </div>\n            \n            <div>\n                <label htmlFor=\"inputUnitOfMeasure\">Input Unit of Measure</label>\n                <input type=\"text\" name=\"inputUnitOfMeasure\" id=\"inputUnitOfMeasure\" value={inputUnitOfMeasure} onChange={e => setInputUnitOfMeasure(e.target.value)} />\n            </div>\n\n            <div>\n                <label htmlFor=\"studentResponse\">Student Response</label>\n                <input type=\"text\" name=\"studentResponse\" id=\"studentResponse\" value={studentResponse} onChange={e => setStudentResponse(e.target.value)} />\n            </div>\n            \n            <div>\n                <label htmlFor=\"targetUnitOfMeasure\">Target Unit of Measure</label>\n                <input type=\"text\" name=\"targetUnitOfMeasure\" id=\"targetUnitOfMeasure\" value={targetUnitOfMeasure} onChange={e => setTargetUnitOfMeasure(e.target.value)} />\n            </div>\n            \n            <div id=\"output\">{resultOutput}</div>\n\n            <div><input type=\"submit\" value=\"Submit\"/></div>\n            \n        </form>\n    );\n}"]},"metadata":{},"sourceType":"module"}