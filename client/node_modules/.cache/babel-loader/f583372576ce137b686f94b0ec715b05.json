{"ast":null,"code":"var _jsxFileName = \"/Users/mhermosi/Development/clcklabs/unit-conversion/src/components/unit-conversion-form.js\";\nimport React, { useState } from 'react';\nexport default function UnitConversionForm() {\n  const [inputNumericalValue, setInputNumericalValue] = useState(\"\");\n  const [inputUnitOfMeasure, setInputUnitOfMeasure] = useState(\"\");\n  const [studentResponse, setStudentResponse] = useState(\"\");\n  const [targetUnitOfMeasure, setTargetUnitOfMeasure] = useState(\"\");\n  const [measureData] = useState([{\n    label: \"Kelvin\",\n    value: \"kelvin\"\n  }, {\n    label: \"Celsius\",\n    value: \"celcius\"\n  }, {\n    label: \"Fahrenheit\",\n    value: \"fahrenheit\"\n  }, {\n    label: \"Rankine\",\n    value: \"rankine\"\n  }, {\n    label: \"Liters\",\n    value: \"liters\"\n  }, {\n    label: \"Tablespoons\",\n    value: \"tablespoons\"\n  }, {\n    label: \"Cubic Inches\",\n    value: \"cubic-inches\"\n  }, {\n    label: \"Cups\",\n    value: \"cups\"\n  }, {\n    label: \"Cubic Feet\",\n    value: \"cubic-feet\"\n  }, {\n    label: \"Gallons\",\n    value: \"gallons\"\n  }]);\n\n  const handleSubmit = evt => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Input Numerical Value\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputNumericalValue,\n    onChange: e => setInputNumericalValue(e.target.valye),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Input Unit of Measure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputUnitOfMeasure,\n    onChange: e => setInputUnitOfMeasure(e.target.valye),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Student Response\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: studentResponse,\n    onChange: e => setStudentResponse(e.target.valye),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Target Unit of Measure\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: targetUnitOfMeasure,\n    onChange: e => setTargetUnitOfMeasure(e.target.valye),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mhermosi/Development/clcklabs/unit-conversion/src/components/unit-conversion-form.js"],"names":["React","useState","UnitConversionForm","inputNumericalValue","setInputNumericalValue","inputUnitOfMeasure","setInputUnitOfMeasure","studentResponse","setStudentResponse","targetUnitOfMeasure","setTargetUnitOfMeasure","measureData","label","value","handleSubmit","evt","e","target","valye"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAEzC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDH,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACI,kBAAD,EAAsBC,qBAAtB,IAAgDL,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACM,eAAD,EAAsBC,kBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAM,CAACU,WAAD,IAAgBV,QAAQ,CAAC,CAC3B;AAAEW,IAAAA,KAAK,EAAE,QAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAD2B,EAE3B;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAF2B,EAG3B;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAH2B,EAI3B;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAJ2B,EAK3B;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAL2B,EAM3B;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAN2B,EAO3B;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAP2B,EAQ3B;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAR2B,EAS3B;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAT2B,EAU3B;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAV2B,CAAD,CAA9B;;AAaA,QAAMC,YAAY,GAAIC,GAAD,IAAS,CAE7B,CAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEX,mBAA1B;AAA+C,IAAA,QAAQ,EAAEa,CAAC,IAAIZ,sBAAsB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,eAKI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEb,kBAA1B;AAA8C,IAAA,QAAQ,EAAEW,CAAC,IAAIV,qBAAqB,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAQI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEX,eAA1B;AAA2C,IAAA,QAAQ,EAAES,CAAC,IAAIR,kBAAkB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVJ,eAWI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAET,mBAA1B;AAA+C,IAAA,QAAQ,EAAEO,CAAC,IAAIN,sBAAsB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAaI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ;AAmBH","sourcesContent":["import React, { useState } from 'react';\n\nexport default function UnitConversionForm() {\n\n    const [inputNumericalValue, setInputNumericalValue] = useState(\"\");\n    const [inputUnitOfMeasure,  setInputUnitOfMeasure]  = useState(\"\");\n    const [studentResponse,     setStudentResponse]     = useState(\"\");\n    const [targetUnitOfMeasure, setTargetUnitOfMeasure] = useState(\"\");\n\n    const [measureData] = useState([\n        { label: \"Kelvin\",       value: \"kelvin\" },\n        { label: \"Celsius\",      value: \"celcius\" },\n        { label: \"Fahrenheit\",   value: \"fahrenheit\" },\n        { label: \"Rankine\",      value: \"rankine\" },\n        { label: \"Liters\",       value: \"liters\" },\n        { label: \"Tablespoons\",  value: \"tablespoons\" },\n        { label: \"Cubic Inches\", value: \"cubic-inches\" },\n        { label: \"Cups\",         value: \"cups\" },\n        { label: \"Cubic Feet\",   value: \"cubic-feet\" },\n        { label: \"Gallons\",      value: \"gallons\" },\n    ]);\n\n    const handleSubmit = (evt) => {\n\n    }\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>Input Numerical Value</label>\n                <input type=\"text\" value={inputNumericalValue} onChange={e => setInputNumericalValue(e.target.valye)} />\n                \n                <label>Input Unit of Measure</label>\n                <input type=\"text\" value={inputUnitOfMeasure} onChange={e => setInputUnitOfMeasure(e.target.valye)} />\n\n                <label>Student Response</label>\n                <input type=\"text\" value={studentResponse} onChange={e => setStudentResponse(e.target.valye)} />\n\n                <label>Target Unit of Measure</label>\n                <input type=\"text\" value={targetUnitOfMeasure} onChange={e => setTargetUnitOfMeasure(e.target.valye)} />\n\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}